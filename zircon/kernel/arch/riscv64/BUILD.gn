# Copyright 2020 The Fuchsia Authors
#
# Use of this source code is governed by a MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT

# TODO(xxx): Keep in sync with BUILD.zircon.gn

import("//build/toolchain/zircon/zircon_toolchain_suite.gni")
import("//build/unification/global_variables.gni")

if (current_toolchain == default_toolchain) {
  # Define a special environment for building code that runs in physical
  # memory with the MMU disabled, at early boot.
  zircon_toolchain_suite("physmem_riscv64") {
    cpu = "riscv64"
    os = "fuchsia"
    environment = "physmem"
    with_shared = false
    toolchain_variant_args = {
      configs = [ "//zircon/kernel/arch/riscv64:physmem_config" ]
      tags = [
        "kernel",
        "strict-align",
      ]
    }
    exclude_variant_tags = [ "instrumented" ]
  }
} else if (toolchain.environment == "physmem") {
  # This is the top config for the physmem environment.
  config("physmem_config") {
    configs = [
      "$zx/kernel:headers",
      "$zx/kernel:standalone",
      "$zx/kernel:warnings",
      "$zx_build_config:no_sanitizers",
    ]

    cflags = [
      "-fpie",
    ]

    include_dirs = [ "include" ]
  }

  group("physmem_config_deps") {
  }
}

if (toolchain.environment == "physmem" ||
    toolchain.environment == "kernel.phys") {
  # These set the ABI contract between C++ and assembly code.
  # This is kept consistent between the kernel proper and phys
  # so (pure PIC) code should be callable from the kernel proper.
  config("abi") {
    cflags = [ "-ffixed-x31" ] # We reserve s11 for the per-cpu datastructure
  }
}
